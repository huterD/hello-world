"""
Problem 1:
If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
Find the sum of all the multiples of 3 or 5 below 1000.
"""
def sum_multiples(limit):
    return sum([i for i in range(0, limit) if i % 3 == 0 or i % 5 == 0])

"""
Problem 2:
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""
def fibonacci():
    a, b = 0, 1
    yield a
    yield b
    while True:
        a, b = b, a + b
        yield b

def sub_fib(start_number, end_number):
    for curr in fibonacci():
        if curr > end_number:
            return
        if curr >= start_number:
            yield curr

sum_fibonacci = 0

for i in sub_fib(0, 4000000):
    if i % 2 == 0:
        sum_fibonacci += i

print(sum_fibonacci)
